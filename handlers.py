from aiogram import Dispatcher, types
from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)
from gpt import suggest_recipe
from db import add_product_to_db

# üîò –ü–æ—Å—Ç—ñ–π–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –æ–¥–Ω—ñ—î—é –∫–Ω–æ–ø–∫–æ—é "/start"
start_reply_keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    keyboard=[[KeyboardButton("/start")]]
)

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
async def cmd_start(message: types.Message):
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("üìã –•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫", callback_data="fridge")],
        [InlineKeyboardButton("üçΩ –°—Ç—Ä–∞–≤–∞ –¥–Ω—è", callback_data="daily_dish")],
        [InlineKeyboardButton("üìÖ –¢–∏–∂–Ω–µ–≤–µ –º–µ–Ω—é", callback_data="weekly_menu")],
        [InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ—ñ–ª—å", callback_data="profile")],
        [InlineKeyboardButton("‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞ / –ü—Ä–æ –±–æ—Ç–∞", callback_data="help")],
        [InlineKeyboardButton("üìù –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó —Ç–∞ —ñ–¥–µ—ó", callback_data="feedback")]  # üî• –Ω–æ–≤–∞ –∫–Ω–æ–ø–∫–∞
    ])

    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏, —â–æ —Ö–æ—á–µ—à –∑—Ä–æ–±–∏—Ç–∏:",
        reply_markup=inline_kb
    )

    # –û–∫—Ä–µ–º–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞—Ä—É –∫–ª–∞–≤—É —Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ –ª–∏—à–µ /start
    await message.answer(
        "üì≤ –Ø–∫—â–æ —Ö–æ—á–µ—à –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Äî –Ω–∞—Ç–∏—Å–Ω–∏ /start.",
        reply_markup=start_reply_keyboard
    )

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—É
async def cmd_add(message: types.Message):
    args = message.get_args()
    if not args:
        await message.reply(
            "‚ùóÔ∏è –í–≤–µ–¥–∏ –ø—Ä–æ–¥—É–∫—Ç –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏ /add, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:\n"
            "/add –ø–æ–º—ñ–¥–æ—Ä–∏ —á–µ—Ä—ñ 300 –≥ 14.07.2025, —è–π—Ü—è 6 —à—Ç\n\n"
            "‚Ä¢ –ù–∞–∑–≤–∞ –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –ü–†–û–ë–Ü–õ–ò\n"
            "‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ –æ–¥–∏–Ω–∏—Ü—è ‚Äî –æ–±–æ–≤ º—è–∑–∫–æ–≤–æ\n"
            "‚Ä¢ –¢–µ—Ä–º—ñ–Ω –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ –¥–¥.–º–º.—Ä—Ä—Ä—Ä ‚Äî –æ–ø—Ü—ñ–π–Ω–æ"
        )
        return
    await add_product_to_db(user_id=message.from_user.id, text=args)
    await message.reply(f"‚úÖ –î–æ–¥–∞–≤ –ø—Ä–æ–¥—É–∫—Ç(–∏): {args}")

# –°—Ç—Ä–∞–≤–∞ –¥–Ω—è (—á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É, –Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ)
async def cmd_menu(message: types.Message):
    response = await suggest_recipe(user_id=message.from_user.id, meal_type="lunch")
    await message.reply(response)

# –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤
def register_handlers(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands="start")
    dp.register_message_handler(cmd_add, commands="add")
    dp.register_message_handler(cmd_menu, commands="menu")